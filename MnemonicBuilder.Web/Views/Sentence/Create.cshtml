@model MnemonicBuilder.Web.ViewModels.CreateSentenceViewModel

@{
	ViewData["Title"] = "Создать предложение";
}
<section class="">
	<div class="container">
		<form asp-controller="Sentence" method="post">
			<div class="row justify-content-center">
				<h2 class="text-center">Строитель предложения</h2>
				<div class="col-md-6 col-lg-5 col-xxl-4">
					<textarea asp-for="Text" id="sentenceInput" type="text" class="form-control h-100" rows="5"></textarea>
				</div>
				<div class="col-md-6 col-lg-5 col-xxl-4">
					<div class="row">
						<div class="align-items-center">
							<label for="Pattern" class="px-1">Регулярное выражение</label>
							<div class="col-md-12 p-1 input-group">
								<input id="patternInput" type="text" placeholder="Введите регулярное выражение"
									   aria-describedby="searchBtn" class="form-control" aria-label="Введите регулярное выражение" />
								<button type="button" id="searchBtn" class="btn btn-primary px-3"><i class="bi bi-search"></i></button>
							</div>
							<div class="col-md-12 p-1">
								<button type="button" class="btn btn-primary w-100" data-bs-toggle="modal" data-bs-target="#exampleModal">
									<i class="bi bi-question-circle"></i> Что такое регулярные выражения
								</button>

								<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
									<div class="modal-lg modal-dialog">
										<div class="modal-content">
											<div class="modal-header">
												<h5 class="modal-title" id="exampleModalLabel">Поиск слов с помощью регулярных выражений</h5>
												<button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
											</div>
											<div class="modal-body">
												<p>Вы можете искать слова из словаря, используя <strong>регулярные выражения</strong> — специальный язык для задания шаблонов.</p>

												<p>Примеры шаблонов:</p>
												<ul>
													<li><code>^ко</code> — все слова, начинающиеся на «ко» (например, <em>кот, ковёр</em>)</li>
													<li><code>ка$</code> — слова, заканчивающиеся на «ка» (например, <em>рука, строка</em>)</li>
													<li><code>^п...а$</code> — пятибуквенные слова, начинающиеся на «п» и заканчивающиеся на «а» (например, <em>пена, пила</em>)</li>
													<li><code>[жш]ка</code> — слова, содержащие «жка» или «шка»</li>
													<li><code>^[а-я]{5}$</code> — все пятибуквенные слова, состоящие только из русских букв</li>
												</ul>

												<p>Полезные конструкции:</p>
												<ul>
													<li><code>.</code> — любой один символ</li>
													<li><code>^</code> — начало слова</li>
													<li><code>$</code> — конец слова</li>
													<li><code>[абв]</code> — любая одна буква из набора</li>
													<li><code>[^абв]</code> — любая буква, кроме указанных</li>
													<li><code>{n}</code> — точно <em>n</em> повторений</li>
													<li><code>{n,}</code> — не меньше <em>n</em> повторений</li>
													<li><code>{n,m}</code> — от <em>n</em> до <em>m</em> повторений</li>
												</ul>

												<p><strong>Примеры поиска:</strong></p>
												<ul>
													<li><code>^раз.*ие$</code> — слова, начинающиеся на «раз» и заканчивающиеся на «ие» (<em>развитие</em>)</li>
													<li><code>.*ст(о|а)в.*</code> — слова, содержащие «стов» или «став»</li>
													<li><code>^[^аеиоуыэюя]{3}</code> — слова, начинающиеся с трёх согласных</li>
												</ul>

												<p class="mt-3"><strong>Важно:</strong> поиск чувствителен к регистру. Вводите шаблон в нижнем регистре, если хотите найти строчные слова.</p>
											</div>
											<div class="modal-footer">
												<button type="button" class="btn btn-primary" data-bs-dismiss="modal">Понятно!</button>
											</div>
										</div>
									</div>
								</div>
							</div>
						</div>
					</div>
				</div>
				<div class="row">

				</div>
				<div class="col-md-12 col-lg-10 col-xxl-8">
					<div id="resultsContainer"></div> <!-- Здесь появятся результаты -->
					<h2 class="text-center">Описание предложения</h2>
					<div class="mb-3">
						<label asp-for="Title" for="sentence-name" class="form-label">Название</label>
						<input asp-for="Title" type="text" class="form-control" id="sentence-name">
					</div>
					<div class="mb-3">
						<label asp-for="Description" for="sentence" class="form-label">Описание</label>
						<textarea asp-for="Description" type="text" class="form-control" rows="4"></textarea>
					</div>
					<div class="mb-3 form-check">
						<input asp-for="IsPublic" type="checkbox" class="form-check-input" id="privacy-check" checked>
						<label asp-for="IsPublic" class="form-check-label" for="privacy-check">Видно остальным пользователям</label>
					</div>
					<button type="submit" class="btn btn-primary">Готово</button>
					<button type="button" class="btn btn-danger">Очистить</button>
				</div>
			</div>
		</form>
	</div>
</section>


<script src="~/lib/jquery/dist/jquery.min.js"></script>
<script>
	// При нажатии кнопки «Поиск» грузим страницу 1
	$(document).ready(function() {
		$("#searchBtn").click(function() {
			loadPage(1);
		});
		// Обработчик клика по ссылкам пагинации внутри контейнера
		$("#resultsContainer").on("click", ".page-link", function(e) {
			e.preventDefault();
			var page = $(this).data("page");
			if (page) { loadPage(page); }
		});
	});

	// Функция для AJAX-запроса страницы результатов
	function loadPage(page) {
		console.log("Загрузка данных!");
		console.log("Страница: " + page);
		var pattern = $("#patternInput").val();
		$.get('/Sentence/Search', { pattern: pattern, page: page })
		 .done(function(data) {
			$("#resultsContainer").html(data); // вставляем полученный HTML
		 });
	}

	   $(document).on('click', '.word-btn', function () {
	  const word = $(this).text().trim();
	  const $input = $('#sentenceInput');

	  // Добавим слово с пробелом
	  if ($input.val().length === 0) {
		$input.val(word);
	  } else {
		$input.val($input.val() + ' ' + word);
	  }

	  $input.focus();
	});
</script>



